version: "3.8"

# Load environment variables from docker.env file
env_file:
  - docker.env

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cupid-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-cupid}
      POSTGRES_USER: ${DB_USER:-root}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-root}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./cmd/migrate/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-root} -d ${DB_NAME:-cupid}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cupid-network

  # Cupid API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cupid-api
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-root}
      DB_NAME: ${DB_NAME:-cupid}
      DB_DRIVER: postgres

      # Server Configuration
      SERVER_PORT: 8080
      GO_ENV: ${GO_ENV:-production}

      # Cupid API Configuration
      CUPID_API_BASE_URL: ${CUPID_API_BASE_URL:-https://content-api.cupid.travel}
      CUPID_API_VERSION: ${CUPID_API_VERSION:-v3.0}
      CUPID_API_KEY: ${CUPID_API_KEY}

      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cupid-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/api/v1/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Data Fetcher Service (runs once to populate database)
  fetch-data:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cupid-fetch-data
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-root}
      DB_NAME: ${DB_NAME:-cupid}
      DB_DRIVER: postgres

      # Cupid API Configuration
      CUPID_API_BASE_URL: ${CUPID_API_BASE_URL:-https://content-api.cupid.travel}
      CUPID_API_VERSION: ${CUPID_API_VERSION:-v3.0}
      CUPID_API_KEY: ${CUPID_API_KEY}

      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
    command: ["./fetch"]
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - cupid-network
    profiles:
      - fetch

volumes:
  postgres_data:
    driver: local

networks:
  cupid-network:
    driver: bridge
